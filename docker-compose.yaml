version: '3.3'

services:
  postgresql:
    image: postgres:17.6
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres@123
      - POSTGRES_DB=helmx
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - './postgresql/conf:/etc/postgresql/conf.d'
      - postgresql_data:/var/lib/postgresql/data
      - './postgresql/log:/var/log/postgresql'

  redis:
    image: redis:6.2.20-alpine
    ports:
      - '6379:6379'
    command: redis-server
    healthcheck:
      test: "redis-cli -h 127.0.0.1 -p 6379 info Replication"
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    volumes:
      - redis_data:/data

  helmx:
    image: shijl0925/helmx-panel:latest
    expose:
      - '8080'
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/helmx
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres@123
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/ops/health"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: always
    tty: true
    stdin_open: true
    ports:
      - '8080:8080'
    volumes:
      - './logs:/app/logs'
      - './docker-certs:/app/docker-certs'

  helmx-web:
    image: shijl0925/helmx-panel-web:latest
    expose:
      - '80'
    depends_on:
      helmx:
        condition: service_healthy
    healthcheck:
      test: "curl -fsL http://localhost > /dev/null"
      interval: 15s
      timeout: 5s
      retries: 5
    restart: always
    ports:
        - '80:80'

volumes:
  postgresql_data:
  redis_data: